name: Tag sync
on:
  push:
    branch: master

env:
  APP_ID: 174141
  APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install depends for load scripts
        run: |
          npm install tag-syncer@1.2.0
          npm install @octokit/rest
      - name: Get token using github-script
        id: get-token
        uses: actions/github-script@v6
        with:
          script: |
            const { Tag, yamlLoad, GetToken } = require('tag-syncer');
            const { APP_ID, APP_PRIVATE_KEY } = process.env;
            const app = {
              APP_ID,
              APP_PRIVATE_KEY
            };

            const repo = {
              owner: context.payload.organization.login,
              repo: context.payload.repository.name
            };
            const octokit = new Octokit({ auth: await GetToken(app, repo) });
            const { base, head } = process.env;
            const changedFiles = await octokit.rest.repos.compareCommits({
              ...context.repo,
              base,
              head
            });
            const files = changedFiles.data.files.map(ele => ele.filename);
            console.log(files)
            const tags = files.filter(item => {
                if (!item.startsWith('tags')) {
                    return false;
                }
                return 'json' === item.split('.')[item.split('.').length -1];
            })
            for (const file of tags) {
              const root = yamlLoad(file);
              if (root === null) {
                continue;
              }
              const { sha, tag, author, email, description } = yamlLoad(file).version;
              await Tag(octokit, repo.owner, repo.repo, sha, tag, description, author, email);
            }
